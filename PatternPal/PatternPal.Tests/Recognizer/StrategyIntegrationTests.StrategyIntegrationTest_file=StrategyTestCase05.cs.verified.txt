[
  {
    RecognizerType: Strategy,
    CheckResult: {
      ChildrenCheckResults: [
        {
          ChildrenCheckResults: [
            {
              ChildrenCheckResults: [
                {
                  ChildrenCheckResults: [
                    {
                      ChildrenCheckResults: [
                        {
                          ChildrenCheckResults: [
                            {
                              Correct: true,
                              FeedbackMessage: Modifiers correctly implemented.,
                              MatchedNode: calculateInterface,
                              Score: {},
                              PerfectScore: {}
                            },
                            {
                              ChildrenCheckResults: [
                                {
                                  ChildrenCheckResults: [
                                    {
                                      Correct: true,
                                      FeedbackMessage: Node 'ICalculateInterface' has correct type,
                                      DependencyCount: 1,
                                      MatchedNode: ICalculateInterface,
                                      Score: {},
                                      PerfectScore: {}
                                    }
                                  ],
                                  CollectionKind: Any,
                                  NodeCheckCollectionWrapper: true,
                                  FeedbackMessage: Found node 'ICalculateInterface',
                                  DependencyCount: 1,
                                  MatchedNode: ICalculateInterface,
                                  Score: {},
                                  PerfectScore: {}
                                }
                              ],
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: false,
                              FeedbackMessage: Found the required checks for: calculateInterface.,
                              DependencyCount: 2,
                              MatchedNode: calculateInterface,
                              Score: {},
                              PerfectScore: {}
                            }
                          ],
                          NodeCheckCollectionWrapper: false,
                          FeedbackMessage: Found field 'calculateInterface',
                          DependencyCount: 2,
                          MatchedNode: calculateInterface,
                          Score: {},
                          PerfectScore: {}
                        }
                      ],
                      CollectionKind: Any,
                      NodeCheckCollectionWrapper: true,
                      FeedbackMessage: ,
                      DependencyCount: 2,
                      Score: {},
                      PerfectScore: {}
                    }
                  ],
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: false,
                  FeedbackMessage: Found the required checks for: CalculateClient.,
                  DependencyCount: 4,
                  MatchedNode: CalculateClient,
                  Score: {},
                  PerfectScore: {}
                },
                {
                  ChildrenCheckResults: [
                    {
                      ChildrenCheckResults: [
                        {
                          ChildrenCheckResults: [
                            {
                              ChildrenCheckResults: [
                                {
                                  Correct: true,
                                  FeedbackMessage: Node SetStrategy() has a Uses relation with node calculateInterface,
                                  Priority: High,
                                  DependencyCount: 3,
                                  MatchedNode: calculateInterface,
                                  Score: {},
                                  PerfectScore: {}
                                }
                              ],
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for SetStrategy().,
                              Priority: High,
                              DependencyCount: 3,
                              MatchedNode: SetStrategy,
                              Score: {},
                              PerfectScore: {}
                            },
                            {
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for SetStrategy().,
                              Priority: High,
                              DependencyCount: 3,
                              MatchedNode: SetStrategy,
                              PerfectScore: {}
                            }
                          ],
                          CollectionKind: Any,
                          NodeCheckCollectionWrapper: false,
                          FeedbackMessage: Found the required checks for: SetStrategy().,
                          Priority: High,
                          DependencyCount: 6,
                          MatchedNode: SetStrategy,
                          Score: {},
                          PerfectScore: {}
                        }
                      ],
                      NodeCheckCollectionWrapper: false,
                      FeedbackMessage: Found method: SetStrategy().,
                      Priority: High,
                      DependencyCount: 6,
                      MatchedNode: SetStrategy,
                      Score: {},
                      PerfectScore: {}
                    },
                    {
                      ChildrenCheckResults: [
                        {
                          ChildrenCheckResults: [
                            {
                              ChildrenCheckResults: [
                                {
                                  Correct: true,
                                  FeedbackMessage: Node Calculate() has a Uses relation with node calculateInterface,
                                  Priority: High,
                                  DependencyCount: 3,
                                  MatchedNode: calculateInterface,
                                  Score: {},
                                  PerfectScore: {}
                                }
                              ],
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for Calculate().,
                              Priority: High,
                              DependencyCount: 3,
                              MatchedNode: Calculate,
                              Score: {},
                              PerfectScore: {}
                            },
                            {
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for Calculate().,
                              Priority: High,
                              DependencyCount: 3,
                              MatchedNode: Calculate,
                              PerfectScore: {}
                            }
                          ],
                          CollectionKind: Any,
                          NodeCheckCollectionWrapper: false,
                          FeedbackMessage: Found the required checks for: Calculate().,
                          Priority: High,
                          DependencyCount: 6,
                          MatchedNode: Calculate,
                          Score: {},
                          PerfectScore: {}
                        }
                      ],
                      NodeCheckCollectionWrapper: false,
                      FeedbackMessage: Found method: Calculate().,
                      Priority: High,
                      DependencyCount: 6,
                      MatchedNode: Calculate,
                      Score: {},
                      PerfectScore: {}
                    },
                    {
                      ChildrenCheckResults: [
                        {
                          ChildrenCheckResults: [
                            {
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for UnusedMethod().,
                              Priority: High,
                              DependencyCount: 3,
                              MatchedNode: UnusedMethod,
                              PerfectScore: {}
                            },
                            {
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for UnusedMethod().,
                              Priority: High,
                              DependencyCount: 3,
                              MatchedNode: UnusedMethod,
                              PerfectScore: {}
                            }
                          ],
                          CollectionKind: Any,
                          NodeCheckCollectionWrapper: false,
                          FeedbackMessage: Found the required checks for: UnusedMethod().,
                          Priority: High,
                          DependencyCount: 6,
                          MatchedNode: UnusedMethod,
                          PerfectScore: {}
                        }
                      ],
                      NodeCheckCollectionWrapper: false,
                      FeedbackMessage: Found method: UnusedMethod().,
                      Priority: High,
                      DependencyCount: 6,
                      MatchedNode: UnusedMethod,
                      PerfectScore: {}
                    }
                  ],
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: ,
                  Priority: High,
                  DependencyCount: 6,
                  Score: {},
                  PerfectScore: {}
                },
                {
                  ChildrenCheckResults: [
                    {
                      ChildrenCheckResults: [
                        {
                          ChildrenCheckResults: [
                            {
                              ChildrenCheckResults: [
                                {
                                  Correct: true,
                                  FeedbackMessage: Node Calculate() has a Uses relation with node Calculate(),
                                  Priority: Mid,
                                  DependencyCount: 1,
                                  MatchedNode: Calculate,
                                  Score: {},
                                  PerfectScore: {}
                                }
                              ],
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for Calculate().,
                              Priority: Mid,
                              DependencyCount: 1,
                              MatchedNode: Calculate,
                              Score: {},
                              PerfectScore: {}
                            },
                            {
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for Calculate().,
                              Priority: Mid,
                              DependencyCount: 1,
                              MatchedNode: Calculate,
                              PerfectScore: {}
                            }
                          ],
                          CollectionKind: Any,
                          NodeCheckCollectionWrapper: false,
                          FeedbackMessage: Found the required checks for: Calculate().,
                          Priority: Mid,
                          DependencyCount: 2,
                          MatchedNode: Calculate,
                          Score: {},
                          PerfectScore: {}
                        }
                      ],
                      NodeCheckCollectionWrapper: false,
                      FeedbackMessage: Found method: Calculate().,
                      Priority: Mid,
                      DependencyCount: 2,
                      MatchedNode: Calculate,
                      Score: {},
                      PerfectScore: {}
                    },
                    {
                      ChildrenCheckResults: [
                        {
                          ChildrenCheckResults: [
                            {
                              ChildrenCheckResults: [
                                {
                                  Correct: true,
                                  FeedbackMessage: Node UnusedMethod() has a Uses relation with node Calculate(),
                                  Priority: Mid,
                                  DependencyCount: 1,
                                  MatchedNode: Calculate,
                                  Score: {},
                                  PerfectScore: {}
                                }
                              ],
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for UnusedMethod().,
                              Priority: Mid,
                              DependencyCount: 1,
                              MatchedNode: UnusedMethod,
                              Score: {},
                              PerfectScore: {}
                            },
                            {
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for UnusedMethod().,
                              Priority: Mid,
                              DependencyCount: 1,
                              MatchedNode: UnusedMethod,
                              PerfectScore: {}
                            }
                          ],
                          CollectionKind: Any,
                          NodeCheckCollectionWrapper: false,
                          FeedbackMessage: Found the required checks for: UnusedMethod().,
                          Priority: Mid,
                          DependencyCount: 2,
                          MatchedNode: UnusedMethod,
                          Score: {},
                          PerfectScore: {}
                        }
                      ],
                      NodeCheckCollectionWrapper: false,
                      FeedbackMessage: Found method: UnusedMethod().,
                      Priority: Mid,
                      DependencyCount: 2,
                      MatchedNode: UnusedMethod,
                      Score: {},
                      PerfectScore: {}
                    },
                    {
                      ChildrenCheckResults: [
                        {
                          ChildrenCheckResults: [
                            {
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for SetStrategy().,
                              Priority: Mid,
                              DependencyCount: 1,
                              MatchedNode: SetStrategy,
                              PerfectScore: {}
                            },
                            {
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for SetStrategy().,
                              Priority: Mid,
                              DependencyCount: 1,
                              MatchedNode: SetStrategy,
                              PerfectScore: {}
                            }
                          ],
                          CollectionKind: Any,
                          NodeCheckCollectionWrapper: false,
                          FeedbackMessage: Found the required checks for: SetStrategy().,
                          Priority: Mid,
                          DependencyCount: 2,
                          MatchedNode: SetStrategy,
                          PerfectScore: {}
                        }
                      ],
                      NodeCheckCollectionWrapper: false,
                      FeedbackMessage: Found method: SetStrategy().,
                      Priority: Mid,
                      DependencyCount: 2,
                      MatchedNode: SetStrategy,
                      PerfectScore: {}
                    }
                  ],
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: ,
                  Priority: Mid,
                  DependencyCount: 2,
                  Score: {},
                  PerfectScore: {}
                }
              ],
              NodeCheckCollectionWrapper: false,
              FeedbackMessage: Found class 'CalculateClient',
              DependencyCount: 12,
              MatchedNode: CalculateClient,
              Score: {},
              PerfectScore: {}
            }
          ],
          CollectionKind: Any,
          NodeCheckCollectionWrapper: true,
          FeedbackMessage: ,
          DependencyCount: 12,
          Score: {},
          PerfectScore: {}
        },
        {
          ChildrenCheckResults: [
            {
              ChildrenCheckResults: [
                {
                  ChildrenCheckResults: [
                    {
                      ChildrenCheckResults: [
                        {
                          ChildrenCheckResults: [
                            {
                              Correct: true,
                              FeedbackMessage: Modifiers correctly implemented.,
                              MatchedNode: calculateInterface,
                              Score: {},
                              PerfectScore: {}
                            },
                            {
                              ChildrenCheckResults: [
                                {
                                  ChildrenCheckResults: [
                                    {
                                      Correct: true,
                                      FeedbackMessage: Node 'ICalculateInterface' has correct type,
                                      DependencyCount: 1,
                                      MatchedNode: ICalculateInterface,
                                      Score: {},
                                      PerfectScore: {}
                                    }
                                  ],
                                  CollectionKind: Any,
                                  NodeCheckCollectionWrapper: true,
                                  FeedbackMessage: Found node 'ICalculateInterface',
                                  DependencyCount: 1,
                                  MatchedNode: ICalculateInterface,
                                  Score: {},
                                  PerfectScore: {}
                                }
                              ],
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: false,
                              FeedbackMessage: Found the required checks for: calculateInterface.,
                              DependencyCount: 2,
                              MatchedNode: calculateInterface,
                              Score: {},
                              PerfectScore: {}
                            }
                          ],
                          NodeCheckCollectionWrapper: false,
                          FeedbackMessage: Found field 'calculateInterface',
                          DependencyCount: 2,
                          MatchedNode: calculateInterface,
                          Score: {},
                          PerfectScore: {}
                        }
                      ],
                      CollectionKind: Any,
                      NodeCheckCollectionWrapper: true,
                      FeedbackMessage: ,
                      DependencyCount: 2,
                      Score: {},
                      PerfectScore: {}
                    }
                  ],
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: false,
                  FeedbackMessage: Found the required checks for: CalculateClient.,
                  DependencyCount: 4,
                  MatchedNode: CalculateClient,
                  Score: {},
                  PerfectScore: {}
                }
              ],
              NodeCheckCollectionWrapper: false,
              FeedbackMessage: Found class 'CalculateClient',
              DependencyCount: 4,
              MatchedNode: CalculateClient,
              Score: {},
              PerfectScore: {}
            }
          ],
          CollectionKind: Any,
          NodeCheckCollectionWrapper: true,
          FeedbackMessage: ,
          DependencyCount: 4,
          Score: {},
          PerfectScore: {}
        },
        {
          ChildrenCheckResults: [
            {
              ChildrenCheckResults: [
                {
                  ChildrenCheckResults: [
                    {
                      ChildrenCheckResults: [
                        {
                          Correct: true,
                          FeedbackMessage: Node Minus has a Implements relation with node ICalculateInterface,
                          DependencyCount: 1,
                          MatchedNode: ICalculateInterface,
                          Score: {},
                          PerfectScore: {}
                        }
                      ],
                      CollectionKind: Any,
                      NodeCheckCollectionWrapper: true,
                      FeedbackMessage: Found Implements relations for Minus.,
                      DependencyCount: 1,
                      MatchedNode: Minus,
                      Score: {},
                      PerfectScore: {}
                    }
                  ],
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: false,
                  FeedbackMessage: Found the required checks for: Minus.,
                  DependencyCount: 2,
                  MatchedNode: Minus,
                  Score: {},
                  PerfectScore: {}
                }
              ],
              NodeCheckCollectionWrapper: false,
              FeedbackMessage: Found class 'Minus',
              DependencyCount: 2,
              MatchedNode: Minus,
              Score: {},
              PerfectScore: {}
            },
            {
              ChildrenCheckResults: [
                {
                  ChildrenCheckResults: [
                    {
                      ChildrenCheckResults: [
                        {
                          Correct: true,
                          FeedbackMessage: Node Plus has a Implements relation with node ICalculateInterface,
                          DependencyCount: 1,
                          MatchedNode: ICalculateInterface,
                          Score: {},
                          PerfectScore: {}
                        }
                      ],
                      CollectionKind: Any,
                      NodeCheckCollectionWrapper: true,
                      FeedbackMessage: Found Implements relations for Plus.,
                      DependencyCount: 1,
                      MatchedNode: Plus,
                      Score: {},
                      PerfectScore: {}
                    }
                  ],
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: false,
                  FeedbackMessage: Found the required checks for: Plus.,
                  DependencyCount: 2,
                  MatchedNode: Plus,
                  Score: {},
                  PerfectScore: {}
                }
              ],
              NodeCheckCollectionWrapper: false,
              FeedbackMessage: Found class 'Plus',
              DependencyCount: 2,
              MatchedNode: Plus,
              Score: {},
              PerfectScore: {}
            }
          ],
          CollectionKind: Any,
          NodeCheckCollectionWrapper: true,
          FeedbackMessage: ,
          DependencyCount: 2,
          Score: {},
          PerfectScore: {}
        },
        {
          ChildrenCheckResults: [
            {
              ChildrenCheckResults: [
                {
                  ChildrenCheckResults: [
                    {
                      Correct: true,
                      FeedbackMessage: Node CalculateClient has a Creates relation with node Minus,
                      Priority: Mid,
                      DependencyCount: 3,
                      MatchedNode: Minus,
                      Score: {},
                      PerfectScore: {}
                    }
                  ],
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Creates relations for CalculateClient.,
                  Priority: Mid,
                  DependencyCount: 3,
                  MatchedNode: CalculateClient,
                  Score: {},
                  PerfectScore: {}
                },
                {
                  ChildrenCheckResults: [
                    {
                      Correct: true,
                      FeedbackMessage: Node CalculateClient has a Uses relation with node Calculate(),
                      Priority: Low,
                      DependencyCount: 3,
                      MatchedNode: Calculate,
                      Score: {},
                      PerfectScore: {}
                    }
                  ],
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Uses relations for CalculateClient.,
                  Priority: Low,
                  DependencyCount: 3,
                  MatchedNode: CalculateClient,
                  Score: {},
                  PerfectScore: {}
                },
                {
                  ChildrenCheckResults: [
                    {
                      Correct: true,
                      FeedbackMessage: Node CalculateClient has a Uses relation with node Calculate(),
                      Priority: Low,
                      DependencyCount: 7,
                      MatchedNode: Calculate,
                      Score: {},
                      PerfectScore: {}
                    }
                  ],
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Uses relations for CalculateClient.,
                  Priority: Low,
                  DependencyCount: 7,
                  MatchedNode: CalculateClient,
                  Score: {},
                  PerfectScore: {}
                }
              ],
              NodeCheckCollectionWrapper: false,
              FeedbackMessage: Found class 'CalculateClient',
              Priority: Mid,
              DependencyCount: 13,
              MatchedNode: CalculateClient,
              Score: {},
              PerfectScore: {}
            },
            {
              ChildrenCheckResults: [
                {
                  ChildrenCheckResults: [
                    {
                      Correct: true,
                      FeedbackMessage: Node MainApp has a Creates relation with node Minus,
                      Priority: Mid,
                      DependencyCount: 3,
                      MatchedNode: Minus,
                      Score: {},
                      PerfectScore: {}
                    },
                    {
                      Correct: true,
                      FeedbackMessage: Node MainApp has a Creates relation with node Plus,
                      Priority: Mid,
                      DependencyCount: 3,
                      MatchedNode: Plus,
                      Score: {},
                      PerfectScore: {}
                    }
                  ],
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Creates relations for MainApp.,
                  Priority: Mid,
                  DependencyCount: 3,
                  MatchedNode: MainApp,
                  Score: {},
                  PerfectScore: {}
                },
                {
                  ChildrenCheckResults: [
                    {
                      Correct: true,
                      FeedbackMessage: Node MainApp has a Uses relation with node SetStrategy(),
                      Priority: Low,
                      DependencyCount: 3,
                      MatchedNode: SetStrategy,
                      Score: {},
                      PerfectScore: {}
                    },
                    {
                      Correct: true,
                      FeedbackMessage: Node MainApp has a Uses relation with node Calculate(),
                      Priority: Low,
                      DependencyCount: 3,
                      MatchedNode: Calculate,
                      Score: {},
                      PerfectScore: {}
                    }
                  ],
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Uses relations for MainApp.,
                  Priority: Low,
                  DependencyCount: 3,
                  MatchedNode: MainApp,
                  Score: {},
                  PerfectScore: {}
                },
                {
                  ChildrenCheckResults: [
                    {
                      Correct: true,
                      FeedbackMessage: Node MainApp has a Uses relation with node SetStrategy(),
                      Priority: Low,
                      DependencyCount: 7,
                      MatchedNode: SetStrategy,
                      Score: {},
                      PerfectScore: {}
                    },
                    {
                      Correct: true,
                      FeedbackMessage: Node MainApp has a Uses relation with node Calculate(),
                      Priority: Low,
                      DependencyCount: 7,
                      MatchedNode: Calculate,
                      Score: {},
                      PerfectScore: {}
                    }
                  ],
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Uses relations for MainApp.,
                  Priority: Low,
                  DependencyCount: 7,
                  MatchedNode: MainApp,
                  Score: {},
                  PerfectScore: {}
                }
              ],
              NodeCheckCollectionWrapper: false,
              FeedbackMessage: Found class 'MainApp',
              Priority: Mid,
              DependencyCount: 13,
              MatchedNode: MainApp,
              Score: {},
              PerfectScore: {}
            },
            {
              ChildrenCheckResults: [
                {
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Creates relations for Minus.,
                  Priority: Mid,
                  DependencyCount: 3,
                  MatchedNode: Minus,
                  PerfectScore: {}
                },
                {
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Uses relations for Minus.,
                  Priority: Low,
                  DependencyCount: 3,
                  MatchedNode: Minus,
                  PerfectScore: {}
                },
                {
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Uses relations for Minus.,
                  Priority: Low,
                  DependencyCount: 7,
                  MatchedNode: Minus,
                  PerfectScore: {}
                }
              ],
              NodeCheckCollectionWrapper: false,
              FeedbackMessage: Found class 'Minus',
              Priority: Mid,
              DependencyCount: 13,
              MatchedNode: Minus,
              PerfectScore: {}
            },
            {
              ChildrenCheckResults: [
                {
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Creates relations for Plus.,
                  Priority: Mid,
                  DependencyCount: 3,
                  MatchedNode: Plus,
                  PerfectScore: {}
                },
                {
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Uses relations for Plus.,
                  Priority: Low,
                  DependencyCount: 3,
                  MatchedNode: Plus,
                  PerfectScore: {}
                },
                {
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Uses relations for Plus.,
                  Priority: Low,
                  DependencyCount: 7,
                  MatchedNode: Plus,
                  PerfectScore: {}
                }
              ],
              NodeCheckCollectionWrapper: false,
              FeedbackMessage: Found class 'Plus',
              Priority: Mid,
              DependencyCount: 13,
              MatchedNode: Plus,
              PerfectScore: {}
            }
          ],
          CollectionKind: Any,
          NodeCheckCollectionWrapper: true,
          FeedbackMessage: ,
          Priority: Mid,
          DependencyCount: 13,
          Score: {},
          PerfectScore: {}
        },
        {
          ChildrenCheckResults: [
            {
              ChildrenCheckResults: [
                {
                  ChildrenCheckResults: [
                    {
                      ChildrenCheckResults: [
                        {
                          NodeCheckCollectionWrapper: false,
                          FeedbackMessage: Found method: Calculate().,
                          MatchedNode: Calculate
                        }
                      ],
                      CollectionKind: Any,
                      NodeCheckCollectionWrapper: true,
                      FeedbackMessage: 
                    }
                  ],
                  NodeCheckCollectionWrapper: false,
                  FeedbackMessage: Found interface 'ICalculateInterface',
                  MatchedNode: ICalculateInterface
                }
              ],
              CollectionKind: Any,
              NodeCheckCollectionWrapper: true,
              FeedbackMessage: 
            }
          ],
          CollectionKind: Any,
          NodeCheckCollectionWrapper: false,
          FeedbackMessage: Found the required checks for: PatternPal.Core.Runner.<RecognizerRunner>F79CA08E52C22783FA3A0EAEBBC26852FEB0B81B3C120614176DB3EB860E78E94__RootNode.
        }
      ],
      NodeCheckCollectionWrapper: false,
      FeedbackMessage: Found the required checks for: PatternPal.Core.Runner.<RecognizerRunner>F79CA08E52C22783FA3A0EAEBBC26852FEB0B81B3C120614176DB3EB860E78E94__RootNode.,
      DependencyCount: 31,
      Score: {},
      PerfectScore: {}
    },
    Requirements: [
      1. Strategy Class,
      1a. Is an interface.,
      1b. Has declared a method.,
      1a. Is an abstract class.,
      1b. Has declared an abstract method.,
      2. Concrete Strategy Class,
      2a. Is an implementation of the Strategy interface.,
      3. Context Class,
      3a. Has a private field or property that has a Strategy class as type.,
      3a. Has a private field or property that has a Strategy class as type.,
      3. Context Class,
      3b. Has a function setStrategy() to set the non-public field / property with parameter of type Strategy.,
      3c. Has a function useStrategy() to execute the strategy.,
      3a. Has a private field or property that has a Strategy class as type.,
      3a. Has a private field or property that has a Strategy class as type.,
      4. Client class,
      4a. Has created an object of the type ConcreteStrategy.,
      4b. Has used the setStrategy() in the Context class to store the ConcreteStrategy object.,
      4c. Has executed the ConcreteStrategy via the Context class.
    ]
  }
]