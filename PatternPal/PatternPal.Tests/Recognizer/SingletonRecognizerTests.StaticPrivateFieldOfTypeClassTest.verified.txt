[
  {
    FeedbackMessage: Found class 'MockClass1',
    Priority: Low,
    ChildrenCheckResults: [
      {
        FeedbackMessage: ,
        ChildrenCheckResults: [
          {
            FeedbackMessage: Found field 'name',
            ChildrenCheckResults: [
              {
                FeedbackMessage: Modifiers correctly implemented.,
                Correct: true,
                MatchedNode: name
              },
              {
                FeedbackMessage: Found node 'MockClass1',
                ChildrenCheckResults: [
                  {
                    FeedbackMessage: Node 'MockClass1' has correct type,
                    Correct: true,
                    DependencyCount: 1,
                    MatchedNode: MockClass1
                  }
                ],
                CollectionKind: Any,
                DependencyCount: 1,
                MatchedNode: MockClass1,
                NodeCheckCollectionWrapper: true
              }
            ],
            DependencyCount: 1,
            MatchedNode: name,
            NodeCheckCollectionWrapper: false
          }
        ],
        CollectionKind: Any,
        DependencyCount: 1,
        NodeCheckCollectionWrapper: true
      }
    ],
    DependencyCount: 1,
    MatchedNode: MockClass1,
    NodeCheckCollectionWrapper: false
  },
  {
    FeedbackMessage: Found class 'MockClass2',
    Priority: Low,
    ChildrenCheckResults: [
      {
        FeedbackMessage: ,
        ChildrenCheckResults: [
          {
            FeedbackMessage: Found field 'name',
            ChildrenCheckResults: [
              {
                FeedbackMessage: The node name does not have the static modifier.,
                Correct: false,
                MatchedNode: name
              },
              {
                FeedbackMessage: Found node 'MockClass2',
                ChildrenCheckResults: [
                  {
                    FeedbackMessage: Node 'MockClass2' has correct type,
                    Correct: true,
                    DependencyCount: 1,
                    MatchedNode: MockClass2
                  }
                ],
                CollectionKind: Any,
                DependencyCount: 1,
                MatchedNode: MockClass2,
                NodeCheckCollectionWrapper: true
              }
            ],
            DependencyCount: 1,
            MatchedNode: name,
            NodeCheckCollectionWrapper: false
          }
        ],
        CollectionKind: Any,
        DependencyCount: 1,
        NodeCheckCollectionWrapper: true
      }
    ],
    DependencyCount: 1,
    MatchedNode: MockClass2,
    NodeCheckCollectionWrapper: false
  },
  {
    FeedbackMessage: Found class 'MockClass3',
    Priority: Low,
    ChildrenCheckResults: [
      {
        FeedbackMessage: ,
        ChildrenCheckResults: [
          {
            FeedbackMessage: Found field 'name',
            ChildrenCheckResults: [
              {
                FeedbackMessage: The node name does not have the private modifier.,
                Correct: false,
                MatchedNode: name
              },
              {
                FeedbackMessage: Found node 'MockClass3',
                ChildrenCheckResults: [
                  {
                    FeedbackMessage: Node 'MockClass3' has correct type,
                    Correct: true,
                    DependencyCount: 1,
                    MatchedNode: MockClass3
                  }
                ],
                CollectionKind: Any,
                DependencyCount: 1,
                MatchedNode: MockClass3,
                NodeCheckCollectionWrapper: true
              }
            ],
            DependencyCount: 1,
            MatchedNode: name,
            NodeCheckCollectionWrapper: false
          }
        ],
        CollectionKind: Any,
        DependencyCount: 1,
        NodeCheckCollectionWrapper: true
      }
    ],
    DependencyCount: 1,
    MatchedNode: MockClass3,
    NodeCheckCollectionWrapper: false
  },
  {
    FeedbackMessage: Found class 'MockClass4',
    Priority: Low,
    ChildrenCheckResults: [
      {
        FeedbackMessage: ,
        ChildrenCheckResults: [
          {
            FeedbackMessage: Found field 'name',
            ChildrenCheckResults: [
              {
                FeedbackMessage: Modifiers correctly implemented.,
                Correct: true,
                MatchedNode: name
              },
              {
                FeedbackMessage: Found node 'MockClass1',
                ChildrenCheckResults: [
                  {
                    FeedbackMessage: Node 'MockClass1' has incorrect type, expected 'MockClass4',
                    Correct: false,
                    DependencyCount: 1,
                    MatchedNode: MockClass4
                  }
                ],
                CollectionKind: Any,
                DependencyCount: 1,
                MatchedNode: MockClass1,
                NodeCheckCollectionWrapper: true
              }
            ],
            DependencyCount: 1,
            MatchedNode: name,
            NodeCheckCollectionWrapper: false
          }
        ],
        CollectionKind: Any,
        DependencyCount: 1,
        NodeCheckCollectionWrapper: true
      }
    ],
    DependencyCount: 1,
    MatchedNode: MockClass4,
    NodeCheckCollectionWrapper: false
  }
]