[
  {
    ChildrenCheckResults: [
      {
        ChildrenCheckResults: [
          {
            ChildrenCheckResults: [
              {
                ChildrenCheckResults: [
                  {
                    Correct: true,
                    FeedbackMessage: Modifiers correctly implemented.,
                    MatchedNode: MockClass1
                  },
                  {
                    Correct: false,
                    FeedbackMessage: The node MockClass1() does not have the protected modifier.,
                    MatchedNode: MockClass1
                  }
                ],
                CollectionKind: Any,
                NodeCheckCollectionWrapper: false,
                FeedbackMessage: Found the required checks for: MockClass1().,
                MatchedNode: MockClass1
              }
            ],
            NodeCheckCollectionWrapper: false,
            FeedbackMessage: Found constructor: MockClass1().,
            MatchedNode: MockClass1
          }
        ],
        CollectionKind: Any,
        NodeCheckCollectionWrapper: true,
        FeedbackMessage: 
      },
      {
        ChildrenCheckResults: [
          {
            ChildrenCheckResults: [
              {
                ChildrenCheckResults: [
                  {
                    Correct: true,
                    FeedbackMessage: Node GetInstance() has a Uses relation with node MockClass1(),
                    Priority: Mid,
                    DependencyCount: 1,
                    MatchedNode: MockClass1
                  }
                ],
                CollectionKind: Any,
                NodeCheckCollectionWrapper: true,
                FeedbackMessage: Found Uses relations for GetInstance().,
                Priority: Mid,
                DependencyCount: 1,
                MatchedNode: GetInstance
              }
            ],
            NodeCheckCollectionWrapper: false,
            FeedbackMessage: Found method: GetInstance().,
            Priority: Low,
            DependencyCount: 1,
            MatchedNode: GetInstance
          }
        ],
        CollectionKind: Any,
        NodeCheckCollectionWrapper: true,
        FeedbackMessage: ,
        Priority: Low,
        DependencyCount: 1
      }
    ],
    NodeCheckCollectionWrapper: false,
    FeedbackMessage: Found class 'MockClass1',
    Priority: Low,
    DependencyCount: 1,
    MatchedNode: MockClass1
  }
]