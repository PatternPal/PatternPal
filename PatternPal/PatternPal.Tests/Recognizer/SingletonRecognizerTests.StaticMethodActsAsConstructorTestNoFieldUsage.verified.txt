[
  {
    FeedbackMessage: Found class 'MockClass5',
    Priority: Low,
    ChildrenCheckResults: [
      {
        FeedbackMessage: ,
        ChildrenCheckResults: [
          {
            FeedbackMessage: Found constructor: MockClass5().,
            ChildrenCheckResults: [
              {
                FeedbackMessage: Found the required checks for: MockClass5().,
                ChildrenCheckResults: [
                  {
                    FeedbackMessage: Modifiers correctly implemented.,
                    Correct: true,
                    MatchedNode: MockClass5
                  },
                  {
                    FeedbackMessage: The node MockClass5() does not have the protected modifier.,
                    Correct: false,
                    MatchedNode: MockClass5
                  }
                ],
                CollectionKind: Any,
                MatchedNode: MockClass5,
                NodeCheckCollectionWrapper: false
              }
            ],
            MatchedNode: MockClass5,
            NodeCheckCollectionWrapper: false
          }
        ],
        CollectionKind: Any,
        NodeCheckCollectionWrapper: true
      },
      {
        FeedbackMessage: ,
        ChildrenCheckResults: [
          {
            FeedbackMessage: Found field '_instance',
            ChildrenCheckResults: [
              {
                FeedbackMessage: Modifiers correctly implemented.,
                Correct: true,
                MatchedNode: _instance
              },
              {
                FeedbackMessage: Found node 'MockClass5',
                ChildrenCheckResults: [
                  {
                    FeedbackMessage: Node 'MockClass5' has correct type,
                    Correct: true,
                    MatchedNode: MockClass5
                  }
                ],
                CollectionKind: Any,
                MatchedNode: MockClass5,
                NodeCheckCollectionWrapper: true
              }
            ],
            MatchedNode: _instance,
            NodeCheckCollectionWrapper: false
          }
        ],
        CollectionKind: Any,
        NodeCheckCollectionWrapper: true
      },
      {
        FeedbackMessage: ,
        Priority: High,
        ChildrenCheckResults: [
          {
            FeedbackMessage: Found method: GetInstance().,
            Priority: High,
            ChildrenCheckResults: [
              {
                FeedbackMessage: Modifiers correctly implemented.,
                Correct: true,
                MatchedNode: GetInstance
              },
              {
                FeedbackMessage: Found the required checks for: GetInstance().,
                ChildrenCheckResults: [
                  {
                    FeedbackMessage: Modifiers correctly implemented.,
                    Correct: true,
                    MatchedNode: GetInstance
                  },
                  {
                    FeedbackMessage: The node GetInstance() does not have the internal modifier.,
                    Correct: false,
                    MatchedNode: GetInstance
                  }
                ],
                CollectionKind: Any,
                MatchedNode: GetInstance,
                NodeCheckCollectionWrapper: false
              },
              {
                FeedbackMessage: Found Uses relations for GetInstance().,
                Priority: Mid,
                ChildrenCheckResults: [
                  {
                    FeedbackMessage: Node GetInstance() has a Uses relation with node MockClass5(),
                    Priority: Mid,
                    Correct: true,
                    DependencyCount: 1,
                    MatchedNode: MockClass5
                  }
                ],
                CollectionKind: Any,
                DependencyCount: 1,
                MatchedNode: GetInstance,
                NodeCheckCollectionWrapper: true
              },
              {
                FeedbackMessage: Found Uses relations for GetInstance().,
                Priority: Mid,
                ChildrenCheckResults: [
                  {
                    FeedbackMessage: No Uses relation found.,
                    Priority: Mid,
                    Correct: false,
                    DependencyCount: 1,
                    MatchedNode: _instance
                  }
                ],
                CollectionKind: Any,
                DependencyCount: 1,
                MatchedNode: GetInstance,
                NodeCheckCollectionWrapper: true
              },
              {
                FeedbackMessage: Found node 'MockClass5',
                ChildrenCheckResults: [
                  {
                    FeedbackMessage: Node 'MockClass5' has correct type,
                    Correct: true,
                    MatchedNode: MockClass5
                  }
                ],
                CollectionKind: Any,
                MatchedNode: MockClass5,
                NodeCheckCollectionWrapper: true
              }
            ],
            DependencyCount: 2,
            MatchedNode: GetInstance,
            NodeCheckCollectionWrapper: false
          }
        ],
        CollectionKind: Any,
        DependencyCount: 2,
        NodeCheckCollectionWrapper: true
      }
    ],
    DependencyCount: 2,
    MatchedNode: MockClass5,
    NodeCheckCollectionWrapper: false
  }
]