[
  {
    RecognizerType: Strategy,
    CheckResult: {
      ChildrenCheckResults: [
        {
          ChildrenCheckResults: [
            {
              ChildrenCheckResults: [
                {
                  ChildrenCheckResults: [
                    {
                      ChildrenCheckResults: [
                        {
                          ChildrenCheckResults: [
                            {
                              Correct: true,
                              FeedbackMessage: Modifiers correctly implemented.,
                              MatchedNode: _cookStrategy,
                              Score: {},
                              PerfectScore: {}
                            },
                            {
                              ChildrenCheckResults: [
                                {
                                  ChildrenCheckResults: [
                                    {
                                      Correct: true,
                                      FeedbackMessage: Node 'CookStrategy' has correct type,
                                      DependencyCount: 1,
                                      MatchedNode: CookStrategy,
                                      Score: {},
                                      PerfectScore: {}
                                    }
                                  ],
                                  CollectionKind: Any,
                                  NodeCheckCollectionWrapper: true,
                                  FeedbackMessage: Found node 'CookStrategy',
                                  DependencyCount: 1,
                                  MatchedNode: CookStrategy,
                                  Score: {},
                                  PerfectScore: {}
                                }
                              ],
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: false,
                              FeedbackMessage: Found the required checks for: _cookStrategy.,
                              DependencyCount: 2,
                              MatchedNode: _cookStrategy,
                              Score: {},
                              PerfectScore: {}
                            }
                          ],
                          NodeCheckCollectionWrapper: false,
                          FeedbackMessage: Found field '_cookStrategy',
                          DependencyCount: 2,
                          MatchedNode: _cookStrategy,
                          Score: {},
                          PerfectScore: {}
                        }
                      ],
                      CollectionKind: Any,
                      NodeCheckCollectionWrapper: true,
                      FeedbackMessage: ,
                      DependencyCount: 2,
                      Score: {},
                      PerfectScore: {}
                    }
                  ],
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: false,
                  FeedbackMessage: Found the required checks for: CookingMethod.,
                  DependencyCount: 4,
                  MatchedNode: CookingMethod,
                  Score: {},
                  PerfectScore: {}
                },
                {
                  ChildrenCheckResults: [
                    {
                      ChildrenCheckResults: [
                        {
                          ChildrenCheckResults: [
                            {
                              ChildrenCheckResults: [
                                {
                                  ChildrenCheckResults: [
                                    {
                                      Correct: true,
                                      FeedbackMessage: Node 'CookStrategy' has correct type,
                                      Priority: High,
                                      DependencyCount: 1,
                                      MatchedNode: CookStrategy,
                                      Score: {},
                                      PerfectScore: {}
                                    }
                                  ],
                                  CollectionKind: Any,
                                  NodeCheckCollectionWrapper: true,
                                  FeedbackMessage: Found node 'CookStrategy',
                                  Priority: High,
                                  DependencyCount: 1,
                                  MatchedNode: CookStrategy,
                                  Score: {},
                                  PerfectScore: {}
                                }
                              ],
                              NodeCheckCollectionWrapper: false,
                              FeedbackMessage: Found parameters for following node: SetCookStrategy().,
                              Priority: High,
                              DependencyCount: 1,
                              MatchedNode: SetCookStrategy,
                              Score: {},
                              PerfectScore: {}
                            },
                            {
                              ChildrenCheckResults: [
                                {
                                  CollectionKind: Any,
                                  NodeCheckCollectionWrapper: true,
                                  FeedbackMessage: Found node 'CookStrategy',
                                  Priority: High,
                                  DependencyCount: 1,
                                  MatchedNode: CookStrategy,
                                  PerfectScore: {}
                                }
                              ],
                              NodeCheckCollectionWrapper: false,
                              FeedbackMessage: Found parameters for following node: SetCookStrategy().,
                              Priority: High,
                              DependencyCount: 1,
                              MatchedNode: SetCookStrategy,
                              PerfectScore: {}
                            }
                          ],
                          CollectionKind: Any,
                          NodeCheckCollectionWrapper: false,
                          FeedbackMessage: Found the required checks for: SetCookStrategy().,
                          Priority: High,
                          DependencyCount: 2,
                          MatchedNode: SetCookStrategy,
                          Score: {},
                          PerfectScore: {}
                        },
                        {
                          ChildrenCheckResults: [
                            {
                              ChildrenCheckResults: [
                                {
                                  Correct: true,
                                  FeedbackMessage: Node SetCookStrategy() has a Uses relation with node _cookStrategy,
                                  Priority: High,
                                  DependencyCount: 3,
                                  MatchedNode: _cookStrategy,
                                  Score: {},
                                  PerfectScore: {}
                                }
                              ],
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for SetCookStrategy().,
                              Priority: High,
                              DependencyCount: 3,
                              MatchedNode: SetCookStrategy,
                              Score: {},
                              PerfectScore: {}
                            },
                            {
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for SetCookStrategy().,
                              Priority: High,
                              DependencyCount: 3,
                              MatchedNode: SetCookStrategy,
                              PerfectScore: {}
                            }
                          ],
                          CollectionKind: Any,
                          NodeCheckCollectionWrapper: false,
                          FeedbackMessage: Found the required checks for: SetCookStrategy().,
                          Priority: High,
                          DependencyCount: 6,
                          MatchedNode: SetCookStrategy,
                          Score: {},
                          PerfectScore: {}
                        }
                      ],
                      NodeCheckCollectionWrapper: false,
                      FeedbackMessage: Found method: SetCookStrategy().,
                      Priority: High,
                      DependencyCount: 8,
                      MatchedNode: SetCookStrategy,
                      Score: {},
                      PerfectScore: {}
                    },
                    {
                      ChildrenCheckResults: [
                        {
                          ChildrenCheckResults: [
                            {
                              ChildrenCheckResults: [
                                {
                                  Correct: false,
                                  FeedbackMessage: ,
                                  Priority: High,
                                  PerfectScore: {}
                                }
                              ],
                              NodeCheckCollectionWrapper: false,
                              FeedbackMessage: The method has no parameters.,
                              Priority: High,
                              DependencyCount: 1,
                              MatchedNode: SetFood,
                              PerfectScore: {}
                            },
                            {
                              ChildrenCheckResults: [
                                {
                                  Correct: false,
                                  FeedbackMessage: ,
                                  Priority: High,
                                  PerfectScore: {}
                                }
                              ],
                              NodeCheckCollectionWrapper: false,
                              FeedbackMessage: The method has no parameters.,
                              Priority: High,
                              DependencyCount: 1,
                              MatchedNode: SetFood,
                              PerfectScore: {}
                            }
                          ],
                          CollectionKind: Any,
                          NodeCheckCollectionWrapper: false,
                          FeedbackMessage: Found the required checks for: SetFood().,
                          Priority: High,
                          DependencyCount: 2,
                          MatchedNode: SetFood,
                          PerfectScore: {}
                        },
                        {
                          ChildrenCheckResults: [
                            {
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for SetFood().,
                              Priority: High,
                              DependencyCount: 3,
                              MatchedNode: SetFood,
                              PerfectScore: {}
                            },
                            {
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for SetFood().,
                              Priority: High,
                              DependencyCount: 3,
                              MatchedNode: SetFood,
                              PerfectScore: {}
                            }
                          ],
                          CollectionKind: Any,
                          NodeCheckCollectionWrapper: false,
                          FeedbackMessage: Found the required checks for: SetFood().,
                          Priority: High,
                          DependencyCount: 6,
                          MatchedNode: SetFood,
                          PerfectScore: {}
                        }
                      ],
                      NodeCheckCollectionWrapper: false,
                      FeedbackMessage: Found method: SetFood().,
                      Priority: High,
                      DependencyCount: 8,
                      MatchedNode: SetFood,
                      PerfectScore: {}
                    },
                    {
                      ChildrenCheckResults: [
                        {
                          ChildrenCheckResults: [
                            {
                              ChildrenCheckResults: [
                                {
                                  Correct: false,
                                  FeedbackMessage: ,
                                  Priority: High,
                                  PerfectScore: {}
                                }
                              ],
                              NodeCheckCollectionWrapper: false,
                              FeedbackMessage: The method has no parameters.,
                              Priority: High,
                              DependencyCount: 1,
                              MatchedNode: Cook,
                              PerfectScore: {}
                            },
                            {
                              ChildrenCheckResults: [
                                {
                                  Correct: false,
                                  FeedbackMessage: ,
                                  Priority: High,
                                  PerfectScore: {}
                                }
                              ],
                              NodeCheckCollectionWrapper: false,
                              FeedbackMessage: The method has no parameters.,
                              Priority: High,
                              DependencyCount: 1,
                              MatchedNode: Cook,
                              PerfectScore: {}
                            }
                          ],
                          CollectionKind: Any,
                          NodeCheckCollectionWrapper: false,
                          FeedbackMessage: Found the required checks for: Cook().,
                          Priority: High,
                          DependencyCount: 2,
                          MatchedNode: Cook,
                          PerfectScore: {}
                        },
                        {
                          ChildrenCheckResults: [
                            {
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for Cook().,
                              Priority: High,
                              DependencyCount: 3,
                              MatchedNode: Cook,
                              PerfectScore: {}
                            },
                            {
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for Cook().,
                              Priority: High,
                              DependencyCount: 3,
                              MatchedNode: Cook,
                              PerfectScore: {}
                            }
                          ],
                          CollectionKind: Any,
                          NodeCheckCollectionWrapper: false,
                          FeedbackMessage: Found the required checks for: Cook().,
                          Priority: High,
                          DependencyCount: 6,
                          MatchedNode: Cook,
                          PerfectScore: {}
                        }
                      ],
                      NodeCheckCollectionWrapper: false,
                      FeedbackMessage: Found method: Cook().,
                      Priority: High,
                      DependencyCount: 8,
                      MatchedNode: Cook,
                      PerfectScore: {}
                    }
                  ],
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: ,
                  Priority: High,
                  DependencyCount: 8,
                  Score: {},
                  PerfectScore: {}
                },
                {
                  ChildrenCheckResults: [
                    {
                      ChildrenCheckResults: [
                        {
                          ChildrenCheckResults: [
                            {
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for SetCookStrategy().,
                              Priority: Mid,
                              DependencyCount: 1,
                              MatchedNode: SetCookStrategy,
                              PerfectScore: {}
                            },
                            {
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for SetCookStrategy().,
                              Priority: Mid,
                              DependencyCount: 1,
                              MatchedNode: SetCookStrategy,
                              PerfectScore: {}
                            }
                          ],
                          CollectionKind: Any,
                          NodeCheckCollectionWrapper: false,
                          FeedbackMessage: Found the required checks for: SetCookStrategy().,
                          Priority: Mid,
                          DependencyCount: 2,
                          MatchedNode: SetCookStrategy,
                          PerfectScore: {}
                        }
                      ],
                      NodeCheckCollectionWrapper: false,
                      FeedbackMessage: Found method: SetCookStrategy().,
                      Priority: Mid,
                      DependencyCount: 2,
                      MatchedNode: SetCookStrategy,
                      PerfectScore: {}
                    },
                    {
                      ChildrenCheckResults: [
                        {
                          ChildrenCheckResults: [
                            {
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for SetFood().,
                              Priority: Mid,
                              DependencyCount: 1,
                              MatchedNode: SetFood,
                              PerfectScore: {}
                            },
                            {
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for SetFood().,
                              Priority: Mid,
                              DependencyCount: 1,
                              MatchedNode: SetFood,
                              PerfectScore: {}
                            }
                          ],
                          CollectionKind: Any,
                          NodeCheckCollectionWrapper: false,
                          FeedbackMessage: Found the required checks for: SetFood().,
                          Priority: Mid,
                          DependencyCount: 2,
                          MatchedNode: SetFood,
                          PerfectScore: {}
                        }
                      ],
                      NodeCheckCollectionWrapper: false,
                      FeedbackMessage: Found method: SetFood().,
                      Priority: Mid,
                      DependencyCount: 2,
                      MatchedNode: SetFood,
                      PerfectScore: {}
                    },
                    {
                      ChildrenCheckResults: [
                        {
                          ChildrenCheckResults: [
                            {
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for Cook().,
                              Priority: Mid,
                              DependencyCount: 1,
                              MatchedNode: Cook,
                              PerfectScore: {}
                            },
                            {
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: true,
                              FeedbackMessage: Found Uses relations for Cook().,
                              Priority: Mid,
                              DependencyCount: 1,
                              MatchedNode: Cook,
                              PerfectScore: {}
                            }
                          ],
                          CollectionKind: Any,
                          NodeCheckCollectionWrapper: false,
                          FeedbackMessage: Found the required checks for: Cook().,
                          Priority: Mid,
                          DependencyCount: 2,
                          MatchedNode: Cook,
                          PerfectScore: {}
                        }
                      ],
                      NodeCheckCollectionWrapper: false,
                      FeedbackMessage: Found method: Cook().,
                      Priority: Mid,
                      DependencyCount: 2,
                      MatchedNode: Cook,
                      PerfectScore: {}
                    }
                  ],
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: ,
                  Priority: Mid,
                  DependencyCount: 2,
                  PerfectScore: {}
                }
              ],
              NodeCheckCollectionWrapper: false,
              FeedbackMessage: Found class 'CookingMethod',
              DependencyCount: 14,
              MatchedNode: CookingMethod,
              Score: {},
              PerfectScore: {}
            }
          ],
          CollectionKind: Any,
          NodeCheckCollectionWrapper: true,
          FeedbackMessage: ,
          DependencyCount: 14,
          Score: {},
          PerfectScore: {}
        },
        {
          ChildrenCheckResults: [
            {
              ChildrenCheckResults: [
                {
                  ChildrenCheckResults: [
                    {
                      ChildrenCheckResults: [
                        {
                          ChildrenCheckResults: [
                            {
                              Correct: true,
                              FeedbackMessage: Modifiers correctly implemented.,
                              MatchedNode: _cookStrategy,
                              Score: {},
                              PerfectScore: {}
                            },
                            {
                              ChildrenCheckResults: [
                                {
                                  ChildrenCheckResults: [
                                    {
                                      Correct: true,
                                      FeedbackMessage: Node 'CookStrategy' has correct type,
                                      DependencyCount: 1,
                                      MatchedNode: CookStrategy,
                                      Score: {},
                                      PerfectScore: {}
                                    }
                                  ],
                                  CollectionKind: Any,
                                  NodeCheckCollectionWrapper: true,
                                  FeedbackMessage: Found node 'CookStrategy',
                                  DependencyCount: 1,
                                  MatchedNode: CookStrategy,
                                  Score: {},
                                  PerfectScore: {}
                                }
                              ],
                              CollectionKind: Any,
                              NodeCheckCollectionWrapper: false,
                              FeedbackMessage: Found the required checks for: _cookStrategy.,
                              DependencyCount: 2,
                              MatchedNode: _cookStrategy,
                              Score: {},
                              PerfectScore: {}
                            }
                          ],
                          NodeCheckCollectionWrapper: false,
                          FeedbackMessage: Found field '_cookStrategy',
                          DependencyCount: 2,
                          MatchedNode: _cookStrategy,
                          Score: {},
                          PerfectScore: {}
                        }
                      ],
                      CollectionKind: Any,
                      NodeCheckCollectionWrapper: true,
                      FeedbackMessage: ,
                      DependencyCount: 2,
                      Score: {},
                      PerfectScore: {}
                    }
                  ],
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: false,
                  FeedbackMessage: Found the required checks for: CookingMethod.,
                  DependencyCount: 4,
                  MatchedNode: CookingMethod,
                  Score: {},
                  PerfectScore: {}
                }
              ],
              NodeCheckCollectionWrapper: false,
              FeedbackMessage: Found class 'CookingMethod',
              DependencyCount: 4,
              MatchedNode: CookingMethod,
              Score: {},
              PerfectScore: {}
            }
          ],
          CollectionKind: Any,
          NodeCheckCollectionWrapper: true,
          FeedbackMessage: ,
          DependencyCount: 4,
          Score: {},
          PerfectScore: {}
        },
        {
          ChildrenCheckResults: [
            {
              ChildrenCheckResults: [
                {
                  ChildrenCheckResults: [
                    {
                      Correct: true,
                      FeedbackMessage: Modifiers correctly implemented.,
                      MatchedNode: CookStrategy,
                      Score: {},
                      PerfectScore: {}
                    },
                    {
                      ChildrenCheckResults: [
                        {
                          ChildrenCheckResults: [
                            {
                              Correct: true,
                              FeedbackMessage: Modifiers correctly implemented.,
                              Priority: High,
                              MatchedNode: Cook,
                              Score: {},
                              PerfectScore: {}
                            }
                          ],
                          NodeCheckCollectionWrapper: false,
                          FeedbackMessage: Found method: Cook().,
                          Priority: High,
                          MatchedNode: Cook,
                          Score: {},
                          PerfectScore: {}
                        }
                      ],
                      CollectionKind: Any,
                      NodeCheckCollectionWrapper: true,
                      FeedbackMessage: ,
                      Priority: High,
                      Score: {},
                      PerfectScore: {}
                    }
                  ],
                  NodeCheckCollectionWrapper: false,
                  FeedbackMessage: Found class 'CookStrategy',
                  MatchedNode: CookStrategy,
                  Score: {},
                  PerfectScore: {}
                }
              ],
              CollectionKind: Any,
              NodeCheckCollectionWrapper: true,
              FeedbackMessage: ,
              Score: {},
              PerfectScore: {}
            }
          ],
          CollectionKind: Any,
          NodeCheckCollectionWrapper: false,
          FeedbackMessage: Found the required checks for: PatternPal.Core.Runner.<RecognizerRunner>F79CA08E52C22783FA3A0EAEBBC26852FEB0B81B3C120614176DB3EB860E78E94__RootNode.,
          Score: {},
          PerfectScore: {}
        },
        {
          ChildrenCheckResults: [
            {
              ChildrenCheckResults: [
                {
                  ChildrenCheckResults: [
                    {
                      ChildrenCheckResults: [
                        {
                          Correct: true,
                          FeedbackMessage: Node OvenBaking has a Extends relation with node CookStrategy,
                          DependencyCount: 1,
                          MatchedNode: CookStrategy,
                          Score: {},
                          PerfectScore: {}
                        }
                      ],
                      CollectionKind: Any,
                      NodeCheckCollectionWrapper: true,
                      FeedbackMessage: Found Extends relations for OvenBaking.,
                      DependencyCount: 1,
                      MatchedNode: OvenBaking,
                      Score: {},
                      PerfectScore: {}
                    }
                  ],
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: false,
                  FeedbackMessage: Found the required checks for: OvenBaking.,
                  DependencyCount: 2,
                  MatchedNode: OvenBaking,
                  Score: {},
                  PerfectScore: {}
                }
              ],
              NodeCheckCollectionWrapper: false,
              FeedbackMessage: Found class 'OvenBaking',
              DependencyCount: 2,
              MatchedNode: OvenBaking,
              Score: {},
              PerfectScore: {}
            },
            {
              ChildrenCheckResults: [
                {
                  ChildrenCheckResults: [
                    {
                      ChildrenCheckResults: [
                        {
                          Correct: true,
                          FeedbackMessage: Node Grilling has a Extends relation with node CookStrategy,
                          DependencyCount: 1,
                          MatchedNode: CookStrategy,
                          Score: {},
                          PerfectScore: {}
                        }
                      ],
                      CollectionKind: Any,
                      NodeCheckCollectionWrapper: true,
                      FeedbackMessage: Found Extends relations for Grilling.,
                      DependencyCount: 1,
                      MatchedNode: Grilling,
                      Score: {},
                      PerfectScore: {}
                    }
                  ],
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: false,
                  FeedbackMessage: Found the required checks for: Grilling.,
                  DependencyCount: 2,
                  MatchedNode: Grilling,
                  Score: {},
                  PerfectScore: {}
                }
              ],
              NodeCheckCollectionWrapper: false,
              FeedbackMessage: Found class 'Grilling',
              DependencyCount: 2,
              MatchedNode: Grilling,
              Score: {},
              PerfectScore: {}
            }
          ],
          CollectionKind: Any,
          NodeCheckCollectionWrapper: true,
          FeedbackMessage: ,
          DependencyCount: 2,
          Score: {},
          PerfectScore: {}
        },
        {
          ChildrenCheckResults: [
            {
              ChildrenCheckResults: [
                {
                  ChildrenCheckResults: [
                    {
                      Correct: true,
                      FeedbackMessage: Node Kitchen has a Creates relation with node OvenBaking,
                      Priority: Mid,
                      DependencyCount: 3,
                      MatchedNode: OvenBaking,
                      Score: {},
                      PerfectScore: {}
                    },
                    {
                      Correct: true,
                      FeedbackMessage: Node Kitchen has a Creates relation with node Grilling,
                      Priority: Mid,
                      DependencyCount: 3,
                      MatchedNode: Grilling,
                      Score: {},
                      PerfectScore: {}
                    }
                  ],
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Creates relations for Kitchen.,
                  Priority: Mid,
                  DependencyCount: 3,
                  MatchedNode: Kitchen,
                  Score: {},
                  PerfectScore: {}
                },
                {
                  ChildrenCheckResults: [
                    {
                      Correct: true,
                      FeedbackMessage: Node Kitchen has a Uses relation with node SetCookStrategy(),
                      Priority: Low,
                      DependencyCount: 3,
                      MatchedNode: SetCookStrategy,
                      Score: {},
                      PerfectScore: {}
                    },
                    {
                      Correct: true,
                      FeedbackMessage: Node Kitchen has a Uses relation with node SetFood(),
                      Priority: Low,
                      DependencyCount: 3,
                      MatchedNode: SetFood,
                      Score: {},
                      PerfectScore: {}
                    },
                    {
                      Correct: true,
                      FeedbackMessage: Node Kitchen has a Uses relation with node Cook(),
                      Priority: Low,
                      DependencyCount: 3,
                      MatchedNode: Cook,
                      Score: {},
                      PerfectScore: {}
                    }
                  ],
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Uses relations for Kitchen.,
                  Priority: Low,
                  DependencyCount: 3,
                  MatchedNode: Kitchen,
                  Score: {},
                  PerfectScore: {}
                },
                {
                  ChildrenCheckResults: [
                    {
                      Correct: true,
                      FeedbackMessage: Node Kitchen has a Uses relation with node SetCookStrategy(),
                      Priority: Low,
                      DependencyCount: 9,
                      MatchedNode: SetCookStrategy,
                      Score: {},
                      PerfectScore: {}
                    },
                    {
                      Correct: true,
                      FeedbackMessage: Node Kitchen has a Uses relation with node SetFood(),
                      Priority: Low,
                      DependencyCount: 9,
                      MatchedNode: SetFood,
                      Score: {},
                      PerfectScore: {}
                    },
                    {
                      Correct: true,
                      FeedbackMessage: Node Kitchen has a Uses relation with node Cook(),
                      Priority: Low,
                      DependencyCount: 9,
                      MatchedNode: Cook,
                      Score: {},
                      PerfectScore: {}
                    }
                  ],
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Uses relations for Kitchen.,
                  Priority: Low,
                  DependencyCount: 9,
                  MatchedNode: Kitchen,
                  Score: {},
                  PerfectScore: {}
                }
              ],
              NodeCheckCollectionWrapper: false,
              FeedbackMessage: Found class 'Kitchen',
              Priority: Mid,
              DependencyCount: 15,
              MatchedNode: Kitchen,
              Score: {},
              PerfectScore: {}
            },
            {
              ChildrenCheckResults: [
                {
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Creates relations for CookStrategy.,
                  Priority: Mid,
                  DependencyCount: 3,
                  MatchedNode: CookStrategy,
                  PerfectScore: {}
                },
                {
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Uses relations for CookStrategy.,
                  Priority: Low,
                  DependencyCount: 3,
                  MatchedNode: CookStrategy,
                  PerfectScore: {}
                },
                {
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Uses relations for CookStrategy.,
                  Priority: Low,
                  DependencyCount: 9,
                  MatchedNode: CookStrategy,
                  PerfectScore: {}
                }
              ],
              NodeCheckCollectionWrapper: false,
              FeedbackMessage: Found class 'CookStrategy',
              Priority: Mid,
              DependencyCount: 15,
              MatchedNode: CookStrategy,
              PerfectScore: {}
            },
            {
              ChildrenCheckResults: [
                {
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Creates relations for OvenBaking.,
                  Priority: Mid,
                  DependencyCount: 3,
                  MatchedNode: OvenBaking,
                  PerfectScore: {}
                },
                {
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Uses relations for OvenBaking.,
                  Priority: Low,
                  DependencyCount: 3,
                  MatchedNode: OvenBaking,
                  PerfectScore: {}
                },
                {
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Uses relations for OvenBaking.,
                  Priority: Low,
                  DependencyCount: 9,
                  MatchedNode: OvenBaking,
                  PerfectScore: {}
                }
              ],
              NodeCheckCollectionWrapper: false,
              FeedbackMessage: Found class 'OvenBaking',
              Priority: Mid,
              DependencyCount: 15,
              MatchedNode: OvenBaking,
              PerfectScore: {}
            },
            {
              ChildrenCheckResults: [
                {
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Creates relations for Grilling.,
                  Priority: Mid,
                  DependencyCount: 3,
                  MatchedNode: Grilling,
                  PerfectScore: {}
                },
                {
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Uses relations for Grilling.,
                  Priority: Low,
                  DependencyCount: 3,
                  MatchedNode: Grilling,
                  PerfectScore: {}
                },
                {
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Uses relations for Grilling.,
                  Priority: Low,
                  DependencyCount: 9,
                  MatchedNode: Grilling,
                  PerfectScore: {}
                }
              ],
              NodeCheckCollectionWrapper: false,
              FeedbackMessage: Found class 'Grilling',
              Priority: Mid,
              DependencyCount: 15,
              MatchedNode: Grilling,
              PerfectScore: {}
            },
            {
              ChildrenCheckResults: [
                {
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Creates relations for CookingMethod.,
                  Priority: Mid,
                  DependencyCount: 3,
                  MatchedNode: CookingMethod,
                  PerfectScore: {}
                },
                {
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Uses relations for CookingMethod.,
                  Priority: Low,
                  DependencyCount: 3,
                  MatchedNode: CookingMethod,
                  PerfectScore: {}
                },
                {
                  CollectionKind: Any,
                  NodeCheckCollectionWrapper: true,
                  FeedbackMessage: Found Uses relations for CookingMethod.,
                  Priority: Low,
                  DependencyCount: 9,
                  MatchedNode: CookingMethod,
                  PerfectScore: {}
                }
              ],
              NodeCheckCollectionWrapper: false,
              FeedbackMessage: Found class 'CookingMethod',
              Priority: Mid,
              DependencyCount: 15,
              MatchedNode: CookingMethod,
              PerfectScore: {}
            }
          ],
          CollectionKind: Any,
          NodeCheckCollectionWrapper: true,
          FeedbackMessage: ,
          Priority: Mid,
          DependencyCount: 15,
          Score: {},
          PerfectScore: {}
        }
      ],
      NodeCheckCollectionWrapper: false,
      FeedbackMessage: Found the required checks for: PatternPal.Core.Runner.<RecognizerRunner>F79CA08E52C22783FA3A0EAEBBC26852FEB0B81B3C120614176DB3EB860E78E94__RootNode.,
      DependencyCount: 35,
      Score: {},
      PerfectScore: {}
    },
    Requirements: [
      1. Strategy Class,
      1a. Is an interface.,
      1b. Has declared a method.,
      1a. Is an abstract class.,
      1b. Has declared an abstract method.,
      2. Concrete Strategy Class,
      2a. Is an implementation of the Strategy interface.,
      3. Context Class,
      3a. Has a private field or property that has a Strategy class as type.,
      3a. Has a private field or property that has a Strategy class as type.,
      3. Context Class,
      3b. Has a function setStrategy() to set the non-public field / property with parameter of type Strategy.,
      3c. Has a function useStrategy() to execute the strategy.,
      3a. Has a private field or property that has a Strategy class as type.,
      3a. Has a private field or property that has a Strategy class as type.,
      4. Client class,
      4a. Has created an object of the type ConcreteStrategy.,
      4b. Has used the setStrategy() in the Context class to store the ConcreteStrategy object.,
      4c. Has executed the ConcreteStrategy via the Context class.
    ]
  }
]