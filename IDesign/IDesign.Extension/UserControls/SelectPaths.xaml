<UserControl x:Class="IDesign.Extension.UserControls.SelectPaths"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/Active Documentblend/2008" 
             xmlns:UIResources="clr-namespace:IDesign.Extension.Resources"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             mc:Ignorable="d" 
             d:DesignHeight="60" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <Border x:Name="Border" Grid.ColumnSpan="2" BorderThickness="1" BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBorderKey}}"/>
                    <Border Grid.Column="0" Margin="1" >
                        <Border.Background>
                            <SolidColorBrush Color="Transparent"/>
                        </Border.Background>
                    </Border>
                    <Path x:Name="Arrow"
                          Grid.Column="1"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="M 0 0 L 4 4 L 8 0 Z" 
                          Fill="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUITextKey}}"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.HighlightKey}}" />
                        <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource {x:Static vsshell:VsBrushes.HighlightKey}}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
                <Border x:Name="PART_ContentHost" Focusable="False" />
            </ControlTemplate>
            <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUITextKey}}" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <ToggleButton x:Name="ToggleButton"
                                            Template="{StaticResource ComboBoxToggleButton}"
                                            Grid.Column="2"
                                            Focusable="false"
                                            ClickMode="Press"
                                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <ContentPresenter x:Name="ContentSite"
                                                IsHitTestVisible="False"
                                                Content="{TemplateBinding SelectionBoxItem}"
                                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                Margin="3,2,23,2"
                                                VerticalAlignment="Stretch"
                                                HorizontalAlignment="Left">
                                </ContentPresenter>
                                <TextBox x:Name="PART_EditableTextBox"
                                        Style="{x:Null}"
                                        Template="{StaticResource ComboBoxTextBox}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Bottom"
                                        Margin="3,2,23,2"
                                        Focusable="True"
                                        Background="Transparent"
                                        Visibility="Hidden"
                                        IsReadOnly="{TemplateBinding IsReadOnly}" />
                                <Popup x:Name="Popup"
                                    Placement="Bottom"
                                    IsOpen="{TemplateBinding IsDropDownOpen}"
                                    AllowsTransparency="True"
                                    Focusable="False"
                                    PopupAnimation="Slide">
                                    <Grid x:Name="DropDown"
                                          SnapsToDevicePixels="True"
                                          MinWidth="{TemplateBinding ActualWidth}"
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder" 
                                                BorderThickness="1" 
                                                BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBorderKey}}" 
                                                Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBorderKey}}" />
                                        <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                                </Trigger>
                                <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                                    <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUITextKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="Border" Padding="2">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.HighlightKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="RadioButton">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUITextKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUITextKey}}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <BulletDecorator Background="Transparent">
                                <BulletDecorator.Bullet>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="13*" />
                                            <RowDefinition Height="11*" />
                                        </Grid.RowDefinitions>
                                        <Ellipse x:Name="Border"
                                                 Width="16"
                                                 Height="16"
                                                 Margin=" 4 4 0 0"
                                                 Stroke="{TemplateBinding BorderBrush}"
                                                 StrokeThickness="1" Grid.RowSpan="2">
                                            <Ellipse.Effect>
                                                <DropShadowEffect BlurRadius="5" ShadowDepth="2" />
                                            </Ellipse.Effect>
                                        </Ellipse>
                                        <Ellipse x:Name="CheckMark"
                                                 Margin="7 7 3 3"
                                                 Width="8"
                                                 Height="8"
                                                 Fill="{TemplateBinding BorderBrush}"
                                                 StrokeThickness="2" Grid.RowSpan="2" />
                                    </Grid>
                                </BulletDecorator.Bullet>
                                <ContentPresenter Margin="5 0"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Center"
                                                  RecognizesAccessKey="True" />
                            </BulletDecorator>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="false">
                                    <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Border" Property="Stroke"
                                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <StackPanel Margin="5">
        <RadioButton Name="radio1" GroupName="path" Content="{x:Static UIResources:ExtensionUIResources.ActiveDocument}" VerticalContentAlignment="Center"
                         Height="25" IsChecked="True" />
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="180"/>
            </Grid.ColumnDefinitions>

            <RadioButton Name="radio2" GroupName="path" Content="{x:Static UIResources:ExtensionUIResources.Project}" VerticalContentAlignment="Center"
                         Height="25" />
            <ComboBox Grid.Column="1" x:Name="ProjectSelection" Margin="5">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </Grid>
    </StackPanel>
</UserControl>
