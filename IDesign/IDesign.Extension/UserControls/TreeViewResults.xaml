<UserControl x:Class="IDesign.Extension.UserControls.TreeViewResults"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:extension="clr-namespace:IDesign.Extension"
             xmlns:models="clr-namespace:IDesign.Extension.ViewModels"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <Style TargetType="TreeView">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUITextKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsColors.BrandedUITextKey}}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabMouseOverBackgroundBeginKey}}" />
            </Style>
            <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid Width="15" Height="13" Background="Transparent">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames
                                                    Storyboard.TargetProperty="(UIElement.Visibility)"
                                                    Storyboard.TargetName="Collapsed">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                            Value="{x:Static Visibility.Hidden}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames
                                                    Storyboard.TargetProperty="(UIElement.Visibility)"
                                                    Storyboard.TargetName="Expanded">
                                                    <DiscreteObjectKeyFrame KeyTime="0"
                                                                            Value="{x:Static Visibility.Visible}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked" />
                                        <VisualState x:Name="Indeterminate" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Path x:Name="Collapsed"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      Margin="1,1,1,1"
                                      Data="M 4 0 L 8 4 L 4 8 Z"
                                      StrokeThickness="1"
                                      Stroke="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUITextKey}}" />
                                <Path x:Name="Expanded"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      Margin="1,1,1,1"
                                      Data="M 4 0 L 8 4 L 4 8 Z"
                                      Visibility="Hidden"
                                      Fill="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUITextKey}}">
                                    <Path.LayoutTransform>
                                        <RotateTransform Angle="45" />
                                    </Path.LayoutTransform>
                                </Path>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TreeViewItemFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border>
                                <Rectangle Margin="0,0,0,0"
                                           StrokeThickness="5"
                                           Stroke="Black"
                                           StrokeDashArray="1 2"
                                           Opacity="0" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="TreeViewItem">
                <EventSetter Event="MouseDoubleClick"
                             Handler="EventSetter_OnHandler" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="HorizontalContentAlignment"
                        Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="VerticalContentAlignment"
                        Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="Padding" Value="1,0,0,0" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <ControlTemplate.Resources>
                                <extension:LeftMarginMultiplierConverter Length="19" x:Key="lengthConverter" />
                            </ControlTemplate.Resources>
                            <StackPanel>

                                <Border Name="Bd"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="{TemplateBinding Padding}">
                                    <Grid
                                        Margin="{Binding Converter={StaticResource lengthConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="19" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <ToggleButton x:Name="Expander"
                                                      Style="{StaticResource ExpandCollapseToggleStyle}"
                                                      IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                      ClickMode="Press" />
                                        <ContentPresenter x:Name="PART_Header" Grid.Column="1" ContentSource="Header"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                                    </Grid>
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" />
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="false">
                                    <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="HasHeader" Value="false" />
                                        <Condition Property="Width" Value="Auto" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="HasHeader" Value="false" />
                                        <Condition Property="Height" Value="Auto" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                                </MultiTrigger>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="Bd" Property="Background"
                                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true" />
                                        <Condition Property="IsSelectionActive" Value="false" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Background"
                                            Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBorderKey}}" />
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <TreeView x:Name="ResultsView" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
              BorderThickness="0 0">
        <TreeView.Resources>
            <HierarchicalDataTemplate DataType="{x:Type models:PatternResultViewModel}"
                                      ItemsSource="{Binding Children}">
                <StackPanel Orientation="Horizontal" Height="26">
                    <Image Source="/IDesign.Extension;component/Resources/logo.png" Width="20" Height="20" />
                    <StackPanel Orientation="Horizontal" Margin="0 2 0 0">
                        <ProgressBar x:Name="patternScore" Height="5" Value="{Binding Path=Score, Mode=OneWay}"
                                     Width="20" Margin="10 0 0 0" BorderBrush="{Binding Color}" BorderThickness="1"
                                     Foreground="{Binding Color}" />

                        <TextBlock Text="{Binding PatternName}" VerticalAlignment="Center" Margin="10,0,0,0"
                                   Foreground="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUITextKey}}" />
                    </StackPanel>
                </StackPanel>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type models:PatternResultPartViewModel}"
                                      ItemsSource="{Binding ChildViewModels}">
                <StackPanel Orientation="Horizontal" Height="24">
                    <StackPanel Orientation="Horizontal" Margin="0 2 0 0">
                        <TextBlock Text="{Binding Name}" VerticalAlignment="Center" Margin="10,0,0,0"
                                   Foreground="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUITextKey}}" />
                    </StackPanel>
                </StackPanel>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type models:PatternComponentViewModel}"
                                      ItemsSource="{Binding EntityNodeViewModels}">
                <StackPanel Orientation="Horizontal" Height="24">
                    <StackPanel Orientation="Horizontal" Margin="0 2 0 0">
                        <TextBlock Text="{Binding Name}" VerticalAlignment="Center" Margin="10,0,0,0"
                                   Foreground="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUITextKey}}" />
                    </StackPanel>
                </StackPanel>
            </HierarchicalDataTemplate>
            <DataTemplate DataType="{x:Type models:EntityNodeViewModel}">
                <StackPanel Orientation="Horizontal" Height="24">
                    <StackPanel Orientation="Horizontal" Margin="0 2 0 0">
                        <TextBlock Text="{Binding Name}" VerticalAlignment="Center" Margin="10,0,0,0"
                                   Foreground="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUITextKey}}" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type models:CheckResultViewModel}"
                                      ItemsSource="{Binding SubResults}">
                <StackPanel Orientation="Horizontal" Height="24">
                    <imaging:CrispImage Width="16" Height="16" Moniker="{Binding Icon}" />

                    <StackPanel Orientation="Horizontal" Margin="5,0,0,0">
                        <TextBlock Text="{Binding Message}" VerticalAlignment="Center"
                                   Foreground="{DynamicResource {x:Static vsshell:VsBrushes.BrandedUITextKey}}" />
                    </StackPanel>
                </StackPanel>
            </HierarchicalDataTemplate>
        </TreeView.Resources>
    </TreeView>
</UserControl>