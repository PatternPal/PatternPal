// <auto-generated />
using System;
using IDesign.LoggingAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IDesign.LoggingAPI.Migrations
{
    [DbContext(typeof(LoggingContext))]
    [Migration("20220112155336_currentDatabase")]
    partial class currentDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("IDesign.LoggingAPI.Action", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActionTypeID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CommitID")
                        .HasColumnType("TEXT");

                    b.Property<int>("ExerciseID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModeID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SessionID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("IDesign.LoggingAPI.ActionType", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("ActionTypes");

                    b.HasData(
                        new
                        {
                            ID = "Build"
                        },
                        new
                        {
                            ID = "RebuildAll"
                        },
                        new
                        {
                            ID = "Clean"
                        },
                        new
                        {
                            ID = "Deploy"
                        });
                });

            modelBuilder.Entity("IDesign.LoggingAPI.ExtensionError", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActionID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("ExtensionErrors");
                });

            modelBuilder.Entity("IDesign.LoggingAPI.Mode", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Modes");

                    b.HasData(
                        new
                        {
                            ID = "Step by Step"
                        });
                });

            modelBuilder.Entity("IDesign.LoggingAPI.Session", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndSession")
                        .HasColumnType("TEXT");

                    b.Property<int>("ExtensionVersion")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartSession")
                        .HasColumnType("TEXT");

                    b.Property<int>("TimeZone")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
