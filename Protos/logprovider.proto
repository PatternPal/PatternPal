syntax = "proto3";

package patternpal;

import "commonlog.proto";
option csharp_namespace = "PatternPal.Protos";

// Defines the API exposed by the PatternPal background service
service LogProviderService  {
    // Runs the recognizer(s) for a given file or project
    rpc LogEvent (LogEventRequest) returns (LogEventResponse);
}

// Input arguments for recognizer request
message LogEventRequest {

// Required columns 
patternpal.EventType event_type = 1;
string event_id = 2;
string subject_id = 3;
string tool_instances = 4;

// Optional columns
string client_timestamp = 5;
string experimental_condition = 6; 
string logging_error_id = 7;
string parent_event_id = 8;
string session_id = 9;
string project_id = 10;
string code_state_section = 11;
patternpal.EventInitiator event_initiatior = 12;
patternpal.EditType edit_type = 13;
string compile_result = 14;
string compile_message_type = 15;
string compile_message_data = 16;
string source_location = 17;
string execution_id = 18;
string test_id = 19;
patternpal.ExecutionResult execution_result = 20;
string intervention_category = 21;
string intervention_type = 22;
string intervention_message = 23;

optional string filePath = 24;
}

// Input arguments for recognizer response
message LogEventResponse {
    string response_message = 1;
}