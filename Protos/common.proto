syntax = "proto3";

package patternpal;

option csharp_namespace = "PatternPal.Protos";

// Root result of a recognizer.
message RecognizeResult {
    // The recognizer which was used to obtain this result.
    Recognizer recognizer = 1;

    string feedback = 2;

    // The results for the individual checks which make up the recognizer.
    repeated Result results = 3;
}

// Result of one specific check inside a recognizer.
message Result {

    // The requirement which belongs to the check of this result.
    string requirement = 1;

    // The MatchedNode of this result.
    MatchedNode matched_node = 2;
}

message MatchedNode {

    //The name of the node.
    string name = 1;

    //The location of the node, used for interactivety in extension.
    string path = 2;

    //The specific start in the code file of this node.
    int32 start = 3;

    //The specific length in the code file of this node.
    int32 length = 4;
}

// Recognizers which can be run.
enum Recognizer {
    // Not used. This is the default value required by the Protocol Buffer spec.
    RECOGNIZER_UNKNOWN = 0;

    // Recognizer for the Adapter pattern.
    RECOGNIZER_ADAPTER = 1;

    // Recognizer for the Bridge pattern.
    RECOGNIZER_BRIDGE = 2;

    // Recognizer for the Decorator pattern.
    RECOGNIZER_DECORATOR = 3;

    // Recognizer for the Factory Method pattern.
    RECOGNIZER_FACTORY_METHOD = 4;

    // Recognizer for the Observer pattern.
    RECOGNIZER_OBSERVER = 5;

    // Recognizer for the Singleton pattern.
    RECOGNIZER_SINGLETON = 6;

    // Recognizer for the State pattern.
    RECOGNIZER_STATE = 7;

    // Recognizer for the Strategy pattern.
    RECOGNIZER_STRATEGY = 8;
}
